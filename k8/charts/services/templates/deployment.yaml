apiVersion: apps/v1
kind: Deployment
metadata:
  name: binance-portfolio-to-amqp
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "binance-portfolio-to-amqp"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "binance-portfolio-to-amqp"
      annotations:
        ad.datadoghq.com/tags: '{"service": "binance-portfolio-to-amqp"}'
        ad.datadoghq.com/binance-portfolio-to-amqp.logs: >-
          [{
            "source": "nodejs",
            "service": "binance-portfolio-to-amqp"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      containers:
        - name: binance-portfolio-to-amqp
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/./services/binance-portfolio-to-amqp/binance-portfolio-to-amqp", "--live"]
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: SENTRY_DSN
              value: "https://fd044b9bc259422ea55a1910e3801aa8@o369902.ingest.sentry.io/5618730"
{{- include "binance.vars" . | nindent 12 }}
{{- include "datadog.vars" . | nindent 12 }}
{{- include "telegram.vars" . | nindent 12 }}
{{- include "amqp.vars" . | nindent 12 }}
{{- include "redis.vars" . | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-performance
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "position-performance"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "position-performance"
      annotations:
        ad.datadoghq.com/tags: '{"service": "position-performance"}'
        ad.datadoghq.com/position-performance.logs: >-
          [{
            "source": "nodejs",
            "service": "position-performance"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: position-performance
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/./services/position-performance/position-performance-service", "--live"]
          # ports:
          # - name: http
          #   containerPort: 8081
          #   protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: SENTRY_DSN
              value: "https://783401c8afe74f84a28d8482f756e380@o369902.ingest.sentry.io/6112675"
{{- include "binance.vars" . | nindent 12 }}
{{- include "datadog.vars" . | nindent 12 }}
{{- include "telegram.vars" . | nindent 12 }}
{{- include "amqp.vars" . | nindent 12 }}
{{- include "redis.vars" . | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: event-logger
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "event-logger"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "event-logger"
      annotations:
        ad.datadoghq.com/tags: '{"service": "event-logger"}'
        ad.datadoghq.com/event-logger.logs: >-
          [{
            "source": "nodejs",
            "service": "event-logger"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: event-logger
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/services/event-logger/event-logger-service", "--live"]
          ports:
          - name: http
            containerPort: 80
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: SENTRY_DSN
              value: "https://dce61fe61fb842f5ab591bf27920e484@o369902.ingest.sentry.io/6111712"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: aws-event-logger
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: aws-event-logger
{{- include "telegram.vars" . | nindent 12 }}
{{- include "amqp.vars" . | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio-to-influxdb
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "portfolio-to-influxdb"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "portfolio-to-influxdb"
      annotations:
        ad.datadoghq.com/tags: '{"service": "portfolio-to-influxdb"}'
        ad.datadoghq.com/portfolio-to-influxdb.logs: >-
          [{
            "source": "nodejs",
            "service": "portfolio-to-influxdb"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: portfolio-to-influxdb
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/services/portfolio-to-influxdb/portfolio-to-influxdb-service"]
          ports:
          - name: http
            containerPort: 80
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: SENTRY_DSN
              value: "https://eef07174512a4c75a326ed7e28165240@o369902.ingest.sentry.io/6111716"
{{- include "telegram.vars" . | nindent 12 }}
{{- include "amqp.vars" . | nindent 12 }}
{{- include "influxdb.vars" . | nindent 12 }}
