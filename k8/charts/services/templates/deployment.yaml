apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-tracker
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "order-tracker"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "order-tracker"
      annotations:
        ad.datadoghq.com/tags: '{"service": "order-tracker"}'
  
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - hostPath:
            path: /opt/datadog-agent/run
          name: pointerdir
      containers:
        - name: order-tracker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["./services/order_tracker.ts"]
          volumeMounts:
            - name: pointerdir
              mountPath: /opt/datadog-agent/run
          # ports:
          # - name: http
          #   containerPort: 8081
          #   protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: DD_LOGS_ENABLED
              value: "true"
            - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
              value: "true"
            - name: REDIS_HOST
              {{- if .Values.redis.create_local }}
              value: {{ .Release.Name }}-redis-master
              {{- else }}
              value: {{ .Values.redis.external_host | quote }}
              {{- end }}
            - name: REDIS_DATABASE_NUMBER
              value: {{ .Values.redis.database_number | quote }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-auth
                  key: password
            - name: TELEGRAM_KEY
              valueFrom:
                secretKeyRef:
                  key: TELEGRAM_KEY
                  name: telegram
            - name: TELEGRAM_CHAT_ID
              valueFrom:
                secretKeyRef:
                  key: TELEGRAM_CHAT_ID
                  name: telegram
            - name: APIKEY
              valueFrom:
                secretKeyRef:
                  key: APIKEY
                  name: binance
            - name: APISECRET
              valueFrom:
                secretKeyRef:
                  key: APISECRET
                  name: binance
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: price-monitor
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "price-monitor"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "price-monitor"
      annotations:
        ad.datadoghq.com/tags: '{"service": "price-monitor"}'
  
    spec:
      volumes:
        - hostPath:
            path: /opt/datadog-agent/run
          name: pointerdir
      containers:
        - name: price-monitor
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["./services/price_monitor.ts"]
          volumeMounts:
            - name: pointerdir
              mountPath: /opt/datadog-agent/run
          # ports:
          # - name: http
          #   containerPort: 8081
          #   protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: DD_LOGS_ENABLED
              value: "true"
            - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
              value: "true"
            - name: REDIS_HOST
              {{- if .Values.redis.create_local }}
              value: {{ .Release.Name }}-redis-master
              {{- else }}
              value: {{ .Values.redis.external_host | quote }}
              {{- end }}
            - name: REDIS_DATABASE_NUMBER
              value: {{ .Values.redis.database_number | quote }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-auth
                  key: password
            - name: TELEGRAM_KEY
              valueFrom:
                secretKeyRef:
                  key: TELEGRAM_KEY
                  name: telegram
            - name: TELEGRAM_CHAT_ID
              valueFrom:
                secretKeyRef:
                  key: TELEGRAM_CHAT_ID
                  name: telegram
            - name: APIKEY
              valueFrom:
                secretKeyRef:
                  key: APIKEY
                  name: binance
            - name: APISECRET
              valueFrom:
                secretKeyRef:
                  key: APISECRET
                  name: binance
            {{- include "aqmp.vars" . | nindent 14 }}

