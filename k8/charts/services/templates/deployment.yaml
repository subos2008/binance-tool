apiVersion: apps/v1
kind: Deployment
metadata:
  name: binance-order-tracker
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "binance-order-tracker"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "binance-order-tracker"
      annotations:
        ad.datadoghq.com/tags: '{"service": "binance-order-tracker"}'
        ad.datadoghq.com/binance-order-tracker.logs: >-
          [{
            "source": "nodejs",
            "service": "binance-order-tracker"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      containers:
        - name: binance-order-tracker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/./services/order-tracker/binance-order-tracker", "--live"]
          # ports:
          # - name: http
          #   containerPort: 8081
          #   protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: SENTRY_DSN
              value: "https://fdceaf9d5e984c6aad15f6ec0301f1f5@o369902.ingest.sentry.io/5286784"
{{- include "binance.vars" . | nindent 12 }}
{{- include "datadog.vars" . | nindent 12 }}
{{- include "telegram.vars" . | nindent 12 }}
# # ---
# # apiVersion: apps/v1
# # kind: Deployment
# # metadata:
# #   name: redis-monitor
# #   labels:
# # {{ include "mychart.labels" . | indent 4 }}
# #     binance-tool/service: "redis-monitor"
# # spec:
# #   replicas: {{ .Values.replicaCount }}
# #   selector:
# #     matchLabels:
# #       app.kubernetes.io/name: {{ include "mychart.name" . }}
# #       app.kubernetes.io/instance: {{ .Release.Name }}
# #   template:
# #     metadata:
# #       labels:
# #         app.kubernetes.io/name: {{ include "mychart.name" . }}
# #         app.kubernetes.io/instance: {{ .Release.Name }}
# #         binance-tool/service: "redis-monitor"
# #       annotations:
# #         ad.datadoghq.com/tags: '{"service": "redis-monitor"}'
# #         ad.datadoghq.com/redis-monitor.logs: >-
# #           [{
# #             "source": "nodejs",
# #             "service": "redis-monitor"
# #           }]  
# #     spec:
# #       volumes:
# #       containers:
# #         - name: redis-monitor
# #           image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
# #           imagePullPolicy: {{ .Values.image.pullPolicy }}
# #           command: ["node", "./out/./services/redis-monitor"]
# #           env:
# #             - name: SENTRY_DSN
# #               value: "https://673cf6fd7c5e49339128d0f4bb3f37c7@o369902.ingest.sentry.io/5286786"
# # {{- include "datadog.vars" . | nindent 12 }}
# # {{- include "redis.vars" . | nindent 12 }}
# # {{- include "telegram.vars" . | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio-tracker
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "portfolio-tracker"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "portfolio-tracker"
      annotations:
        ad.datadoghq.com/tags: '{"service": "portfolio-tracker"}'
        ad.datadoghq.com/portfolio-tracker.logs: >-
          [{
            "source": "nodejs",
            "service": "portfolio-tracker"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      containers:
        - name: portfolio-tracker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/./services/portfolio_tracker/portfolio-tracker", "--live"]
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: SENTRY_DSN
              value: "https://fd044b9bc259422ea55a1910e3801aa8@o369902.ingest.sentry.io/5618730"
{{- include "binance.vars" . | nindent 12 }}
{{- include "datadog.vars" . | nindent 12 }}
{{- include "telegram.vars" . | nindent 12 }}
{{- include "amqp.vars" . | nindent 12 }}
{{- include "redis.vars" . | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: binance-to-amqp
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "binance-to-amqp"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "binance-to-amqp"
      annotations:
        ad.datadoghq.com/tags: '{"service": "binance-to-amqp"}'
        ad.datadoghq.com/binance-to-amqp.logs: >-
          [{
            "source": "nodejs",
            "service": "binance-to-amqp"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      containers:
        - name: binance-to-amqp
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/./services/binance-to-amqp/binance-to-amqp", "--live"]
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: SENTRY_DSN
              value: "https://fd044b9bc259422ea55a1910e3801aa8@o369902.ingest.sentry.io/5618730"
{{- include "binance.vars" . | nindent 12 }}
{{- include "datadog.vars" . | nindent 12 }}
{{- include "telegram.vars" . | nindent 12 }}
{{- include "amqp.vars" . | nindent 12 }}
{{- include "redis.vars" . | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: binance-orders-to-amqp
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "binance-orders-to-amqp"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "binance-orders-to-amqp"
      annotations:
        ad.datadoghq.com/tags: '{"service": "binance-orders-to-amqp"}'
        ad.datadoghq.com/binance-orders-to-amqp.logs: >-
          [{
            "source": "nodejs",
            "service": "binance-orders-to-amqp"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      containers:
        - name: binance-orders-to-amqp
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/./services/binance-orders-to-amqp/binance-orders-to-amqp", "--live"]
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: SENTRY_DSN
              value: "ttps://39c6f58d63334b43bf0986cf24d863a5@o369902.ingest.sentry.io/6114372"
{{- include "binance.vars" . | nindent 12 }}
{{- include "datadog.vars" . | nindent 12 }}
{{- include "telegram.vars" . | nindent 12 }}
{{- include "amqp.vars" . | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: binance-position-tracker
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "binance-position-tracker"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "binance-position-tracker"
      annotations:
        ad.datadoghq.com/tags: '{"service": "binance-position-tracker"}'
        ad.datadoghq.com/binance-position-tracker.logs: >-
          [{
            "source": "nodejs",
            "service": "binance-position-tracker"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      containers:
        - name: binance-position-tracker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/./services/position-tracker/binance-position-tracker", "--live"]
          # ports:
          # - name: http
          #   containerPort: 8081
          #   protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: SENTRY_DSN
              value: "https://f999d04298a34caa82c13839699a266f@o369902.ingest.sentry.io/5735251"
{{- include "binance.vars" . | nindent 12 }}
{{- include "datadog.vars" . | nindent 12 }}
{{- include "telegram.vars" . | nindent 12 }}
{{- include "amqp.vars" . | nindent 12 }}
{{- include "redis.vars" . | nindent 12 }}
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: auto-position-exits
#   labels:
# {{ include "mychart.labels" . | indent 4 }}
#     binance-tool/service: "auto-position-exits"
# spec:
#   replicas: {{ .Values.replicaCount }}
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: {{ include "mychart.name" . }}
#       app.kubernetes.io/instance: {{ .Release.Name }}
#   template:
#     metadata:
#       labels:
#         app.kubernetes.io/name: {{ include "mychart.name" . }}
#         app.kubernetes.io/instance: {{ .Release.Name }}
#         binance-tool/service: "auto-position-exits"
#       annotations:
#         ad.datadoghq.com/tags: '{"service": "auto-position-exits"}'
#         ad.datadoghq.com/auto-position-exits.logs: >-
#           [{
#             "source": "nodejs",
#             "service": "auto-position-exits"
#           }]   
#     spec:
#     {{- with .Values.imagePullSecrets }}
#       imagePullSecrets:
#         {{- toYaml . | nindent 8 }}
#     {{- end }}
#       containers:
#         - name: auto-position-exits
#           image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
#           imagePullPolicy: {{ .Values.image.pullPolicy }}
#           command: ["node", "./out/./services/auto-position-exits/auto-position-exits", "--live"]
#           # ports:
#           # - name: http
#           #   containerPort: 8081
#           #   protocol: TCP
#           # livenessProbe:
#           #   httpGet:
#           #     path: /health
#           #     port: http
#           # readinessProbe:
#           #   httpGet:
#           #     path: /health
#           #     port: http
#           env:
#             - name: SENTRY_DSN
#               value: "https://b8ae7f07a03044cba474efd640e744d8@o369902.ingest.sentry.io/5735252"
# {{- include "binance.vars" . | nindent 12 }}
# {{- include "datadog.vars" . | nindent 12 }}
# {{- include "telegram.vars" . | nindent 12 }}
# {{- include "amqp.vars" . | nindent 12 }}
# {{- include "redis.vars" . | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge56
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "edge56"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "edge56"
      annotations:
        ad.datadoghq.com/tags: '{"service": "edge56"}'
        ad.datadoghq.com/edge56.logs: >-
          [{
            "source": "nodejs",
            "service": "edge56"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      containers:
        - name: edge56
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/./services/edge56/edge56-service", "--live"]
          # ports:
          # - name: http
          #   containerPort: 8081
          #   protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: SENTRY_DSN
              value: "https://2de8658dca5b4bf18c7787cfd2deb738@o369902.ingest.sentry.io/5763740"
{{- include "binance.vars" . | nindent 12 }}
{{- include "datadog.vars" . | nindent 12 }}
{{- include "telegram.vars" . | nindent 12 }}
{{- include "amqp.vars" . | nindent 12 }}
{{- include "redis.vars" . | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge58
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "edge58"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "edge58"
      annotations:
        ad.datadoghq.com/tags: '{"service": "edge58"}'
        ad.datadoghq.com/edge58.logs: >-
          [{
            "source": "nodejs",
            "service": "edge58"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      containers:
        - name: edge58
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/./services/edge58/edge58-service", "--live"]
          # ports:
          # - name: http
          #   containerPort: 8081
          #   protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: SENTRY_DSN
              value: "https://ec7e90a79b4e48ac8727fc5de7bfc454@o369902.ingest.sentry.io/6112658"
{{- include "binance.vars" . | nindent 12 }}
{{- include "datadog.vars" . | nindent 12 }}
{{- include "telegram.vars" . | nindent 12 }}
{{- include "amqp.vars" . | nindent 12 }}
{{- include "redis.vars" . | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-performance
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "position-performance"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "position-performance"
      annotations:
        ad.datadoghq.com/tags: '{"service": "position-performance"}'
        ad.datadoghq.com/position-performance.logs: >-
          [{
            "source": "nodejs",
            "service": "position-performance"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: position-performance
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/./services/position-performance/position-performance-service", "--live"]
          # ports:
          # - name: http
          #   containerPort: 8081
          #   protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: SENTRY_DSN
              value: "https://783401c8afe74f84a28d8482f756e380@o369902.ingest.sentry.io/6112675"
{{- include "binance.vars" . | nindent 12 }}
{{- include "datadog.vars" . | nindent 12 }}
{{- include "telegram.vars" . | nindent 12 }}
{{- include "amqp.vars" . | nindent 12 }}
{{- include "redis.vars" . | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: event-logger
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "event-logger"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "event-logger"
      annotations:
        ad.datadoghq.com/tags: '{"service": "event-logger"}'
        ad.datadoghq.com/event-logger.logs: >-
          [{
            "source": "nodejs",
            "service": "event-logger"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: event-logger
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/services/event-logger/event-logger-service", "--live"]
          ports:
          - name: http
            containerPort: 80
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: SENTRY_DSN
              value: "https://dce61fe61fb842f5ab591bf27920e484@o369902.ingest.sentry.io/6111712"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: aws-event-logger
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: aws-event-logger
{{- include "telegram.vars" . | nindent 12 }}
{{- include "amqp.vars" . | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio-to-influxdb
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "portfolio-to-influxdb"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "portfolio-to-influxdb"
      annotations:
        ad.datadoghq.com/tags: '{"service": "portfolio-to-influxdb"}'
        ad.datadoghq.com/portfolio-to-influxdb.logs: >-
          [{
            "source": "nodejs",
            "service": "portfolio-to-influxdb"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: portfolio-to-influxdb
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/services/portfolio-to-influxdb/portfolio-to-influxdb-service"]
          ports:
          - name: http
            containerPort: 80
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: SENTRY_DSN
              value: "https://eef07174512a4c75a326ed7e28165240@o369902.ingest.sentry.io/6111716"
{{- include "telegram.vars" . | nindent 12 }}
{{- include "amqp.vars" . | nindent 12 }}
{{- include "influxdb.vars" . | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tg-bot-bert
  labels:
{{ include "mychart.labels" . | indent 4 }}
    binance-tool/service: "tg-bot-bert"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        binance-tool/service: "tg-bot-bert"
      annotations:
        ad.datadoghq.com/tags: '{"service": "tg-bot-bert"}'
        ad.datadoghq.com/tg-bot-bert.logs: >-
          [{
            "source": "nodejs",
            "service": "tg-bot-bert"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: tg-bot-bert
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/./services/tg-bot-bert-2000/bert", "--live"]
          ports:
          - name: http
            containerPort: 3000
            protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          env:
            - name: SENTRY_DSN
              value: "https://2de8658dca5b4bf18c7787cfd2deb738@o369902.ingest.sentry.io/5763740" # TODO update
{{- include "telegram-bot-bert.vars" . | nindent 12 }}
