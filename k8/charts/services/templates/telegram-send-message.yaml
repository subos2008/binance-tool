apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegram-send-message
  labels:
{{ include "mychart.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mychart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app: telegram-send-message
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mychart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: telegram-send-message
      annotations:
        ad.datadoghq.com/tags: '{"service": "telegram-send-message"}'
        ad.datadoghq.com/service.logs: >-
          [{
            "source": "nodejs",
            "service": "telegram-send-message"
          }]   
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: service
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "./out/./services/amqp/send-message/telegram/send-message-telegram-service"]
          ports:
          - name: http
            containerPort: 80
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          startupProbe: # First time this goes healthy livenessProbe is activated
            httpGet:
              path: /health
              port: http
            failureThreshold: 30 # 30 * 10 = 5 minutes
            periodSeconds: 10
          env:
            - name: SENTRY_DSN
              value: "https://5d63880d2c7a4814b84b35b77d3df700@o369902.ingest.sentry.io/6573496"
            # - name: DEBUG
            #   value: "telegraf:*"
{{- include "telegram.vars" . | nindent 12 }}
{{- include "binance-spot-tas.vars" . | nindent 12 }}
{{- include "binance-futures-tas.vars" . | nindent 12 }}
{{- include "amqp.vars" . | nindent 12 }}
