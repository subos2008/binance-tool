//@version=5

// This source code is proprietary, unlicenced. Copyright Ryan Cocks, all rights reserved.

strategy(title="Edge 71", overlay=true)

// START of INDICATOR

// Config Days of lookback for high/low signal prices
num_high_days = input.int(250, minval=1, title="Number of Days for Long (Close Breakout)")
num_low_days = input.int(60, minval=1, title="Number of Days for Short (Close Breakout)")
// lowest_body = math.min(ta.lowest(close, num_breakout_days)[1],ta.lowest(open, num_breakout_days)[1])
// highest_body = math.max(ta.highest(close, num_breakout_days)[1],ta.highest(open, num_breakout_days)[1])

lowest_low = ta.lowest(low, num_low_days)[1]
highest_high = ta.highest(high, num_high_days)[1]

long_entry_signal = high > highest_high
short_entry_signal = low < lowest_low

// debug
plot(lowest_low)
plot(highest_high)

plotarrow(long_entry_signal?1:0, colorup = color.green)
plotarrow(short_entry_signal?-1:0, colordown = color.red)
// Indicator exit API
// long_entry and short_entry: entry signal with filters applied

// END of INDICATOR





// START of STRATEGY

// Entry and Exit

// Stops - 5-10% for each individual entry
// long_stop_price = close * 0.9
// short_stop_price = close *1.1
// note we might need to cancel stop orders manually when we exit

max_ordersize=math.floor(strategy.equity/close) // To dynamically calculate the order size as the account equity increases or decreases.
if(max_ordersize) < 0
    max_ordersize := 0
position_size = max_ordersize

// Entry is crossunder/over of lowest_body/highest_body, when = matching long/short_filter
// long entry
strategy.entry("long", strategy.long, position_size, when=long_entry_signal)
// short entry
// strategy.entry("short", strategy.short, position_size, when=short_entry_signal)
// TODO: add stops with:  strategy.exit
// TODO: this is not adding to positions


// close_all when filters dont match trade direction
strategy.close('long', when=short_entry_signal)
// strategy.close('short', when=long_entry_signal)
// plot(strategy.position_size)


//scratch
// if (not long_filter)
//     strategy.exit("long_trailing_stop", "long", trail_points = 4000, trail_offset = 1500)
// if (not short_filter)
//     strategy.exit("short_trailing_stop", "short", trail_points = 4000, trail_offset = 1500)


